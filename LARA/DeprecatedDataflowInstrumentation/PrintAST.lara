aspectdef PrintAST
	input
		root
	end
	printLevel(root, 0);
end

function printLevel(node, n) {
	if (node.joinPointType == "statement" && node.numChildren == 0)
		return;
	if (node.joinPointType != "scope" && node.joinPointType != "function")
		println(getSpaces(n) + node.joinPointType + getOp(node) + "--------" + getField(node, "label") + ", " + getField(node, "alt"));
	else
		println(getSpaces(n) + node.joinPointType);
	for (var i = 0; i < node.children.length; i++)
	printLevel(node.children[i], n + 1);
}

function getSpaces(n) {
	var s = "";
	for (i = 0; i < n; i++)
		s += "  ";
	return s;
}

function getField(node, field) {
	if (node.userField(field) == undefined)
		return "";
	else
		return JSON.stringify(node.userField(field));
}

function getOp(node) {
	if (node.joinPointType == "unaryOp" || node.joinPointType == "binaryOp")
		return " {op: " + node.kind + "} ";
	else return "";
}
