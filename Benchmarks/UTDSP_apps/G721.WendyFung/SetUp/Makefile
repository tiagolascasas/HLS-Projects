#
#	Copyright (c) 1994 - Corinna G. Lee, University of Toronto
#
.SILENT:
.IGNORE:
TAG = "-----"
DataName = bark
#
# Set up symbolic links in sub-directories for input files (based on
# documentation in README file).
#
setup:
	ln -s ../$(DataName).lpcm		Aexpandby2/input.dsp
	ln -s ../Aexpandby2/ptrs/output.sun	Bcoder/input.dsp
	ln -s ../Bcoder/ptrs/output.sun		Csqueezeby8/input.dsp
	ln -s ../Csqueezeby8/ptrs/output.sun	Dexpandby8/input.dsp
	ln -s ../Dexpandby8/ptrs/output.sun	Edecoder/input.dsp2
	ln -s ../Bcoder/ptrs/output.sun		Edecoder/input.dsp
	ln -s ../Edecoder/ptrs/output.sun	Fsqueezeby2/input.dsp

#
# Internal checks to ensure that outputs of encoder and decoder match
# corresponding outputs generated by original code copied from the network.
#
ORIGINAL = ../G721.MarcusLee/Original
CONVERT = ../G721.MarcusLee/SetUp/convert
validate:
	echo " "
	echo "$(TAG) Internally VALIDATing `pwd`"
	cd $(ORIGINAL) ; runADPCM $(DataName)
	make DataType="pcm" OutputFile="Fsqueezeby2/ptrs/output.sun" compare
	-$(CONVERT) -p Fsqueezeby2/ptrs/output.sun /tmp/$(DataName).auP
	make DataType="au" OutputFile="/tmp/$(DataName).auP" compare

compare:
	echo "$(TAG) CMPing $(DataType) versions ...."
	cmp $(OutputFile) $(ORIGINAL)/outputs/$(DataName).$(DataType)P
	echo "$(TAG) DONE"
