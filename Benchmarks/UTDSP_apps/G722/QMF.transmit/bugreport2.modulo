symptom : modulo addressing mode yields incorrect results
actual problem : 3rd operand for incmod operation is incorrect
===========================================================================

1. - In the program below, foo() is called in main.
   - foo() updates the array, overwriting the 1st element with "3",
     the next with "5", etc, etc, etc. 

-------------------------start of my short pgm-----------------------------
#include "traps.h"
#define OK 1
#define N 6
int array[N] = {1,2,3,4,5,6};

int *ptr;
int Xm;
int foo();

void main()
  {
  Xm = 3;
  ptr = array;
  foo(Xm, ptr);

  output_dsp(&Xm,  1,1);
  output_dsp(&ptr, 1,1);
  output_dsp(array,6,1);
  }

int foo(int X, int *fooptr)
  {
  int i, dummy, *inptr;
  inptr = fooptr;
  dummy = X;
  *inptr++ = dummy;
#ifdef GCCmod
  if(inptr >= array+N) inptr = array;
#endif
  for(i=0;i<N+1;i++)
    {
    dummy += 2;
    *inptr++ = dummy;
#ifdef GCCmod
    if(inptr >= array+N) inptr = array;
#endif
    }
  return OK;
  }
--------------------------end of my short pgm------------------------------

2. doing a "compare -m" on my program generates the following...

	expected
addr	 output		output.O1235			output.sun
====	========	============			==========

0	   3		    11	<=====     Xm    =====>	   3
4	<large int>	    13	<=====    ptr	 =====>	   16624
8	   15		    15	<===== array[0]	 =====>	   15
12	   17		    17	<===== array[1]	 =====>	   17
16	   7		    7	<===== array[2]	 =====>	   7
20	   9		    9	<===== array[3]	 =====>	   9
24	   11		    5	<===== array[4]	 =====>	   11
28	   13		    6	<===== array[5]	 =====>	   13


3. looking below at the ".s.initial" file, we see that the "incmod" operation
   ineffect uses "#24" as its 3rd operand.

4. #24 would be correct only if the memory location reserved for the
   array started at #0.

5. interpreting the above "output.O1235", it looks like the system
   thinks the 1st element of the array is at #0, and the 6th element
   at #20.

-----------------------.s.initial (summarised)-------------------------
.gccDSP_compiled
.OptimizeDSP_optimized

.global array
.global main
.global foo
.global Xm
.global ptr

.data_X

.common Xm,1
.common ptr,1

array:
.int    1
.int    2
.int    3
.int    4
.int    5
.int    6

.begin  foo
foo:
	AU0:	movi.a  #24,a5        <=========
	AU0:	mov.a   a3,a2
	DU0:	mov.d   d2,d3
	MU0:	st.d    (a2),d3
	AU0:	incmod  a2,a0,a5,a2   <=========
	DU0:	mov.d   d0,d2
	DU0:	movi.d  #2,d6
	DU0:	movi.d  #1,d5
	DU0:	movi.d  #6,d4
L6:
	DU0:	add.d   d3,d6,d3
	MU0:	st.d    (a2),d3
	AU0:	incmod  a2,a0,a5,a2   <=========
	DU0:	add.d   d2,d5,d2
	DU0:	sgt.d   d2,d4,d1
	PCU:	beqz.d  d1,L6
	DU0:	movi.d  #1,d2
	PCU:	rts     

.end    foo
---------------------------end of .s.initial -------------------------------

quickfix: ???  (help! :)
