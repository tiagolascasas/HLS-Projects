#
#	Copyright (c) 1994 - Corinna G. Lee, University of Toronto
#
.SILENT:
.IGNORE:
.SUFFIXES: .au .dsp .auP .dspP
CC = /gnu/bin/gcc
SHELL = /bin/csh
MAKE = /bin/make
TAG = "-----"
DataName = bark

#
# Targets for setting up input file for coder and symbolic link for output
# of decoder.
#
# Make sure that this is actually done in test_suite directory!
#	ln -s ../Original/inputs/$(DataName).au
#	$(MAKE) $(DataName).dsp

setup:
	ln -s ../$(DataName).dsp		coder/input.dsp
	ln -s ../coder/ptrs/output.sun		decoder/input.dsp
	touch decoder/ptrs/output.sun
	ln -s ../decoder/ptrs/output.sun	$(DataName).dspP

.au.dsp:
	$(MAKE) convert
	convert -u $*.au $*.pcm
	$(MAKE) binary2ascii
	binary2ascii -p $*.pcm $*.dsp

#
# Internal checks to ensure that outputs of encoder and decoder match
# corresponding outputs generated by original code copied from the network.
#
validate:	$(DataName).auP
	echo " "
	echo "$(TAG) Internally VALIDATing `pwd`"
	cd ../Original ; runADPCM $(DataName)
	$(MAKE) DataType="pcm" compare
	$(MAKE) DataType="au" compare
.dspP.auP:
	$(MAKE) ascii2binary
	-ascii2binary -p $*.dspP $*.pcmP
	$(MAKE) convert
	-convert -p $*.pcmP $*.auP

compare:
	echo "$(TAG) CMPing $(DataType) versions ...."
	cmp $(DataName).$(DataType)P ../Original/outputs/$(DataName).$(DataType)P
	echo "$(TAG) DONE"
	
#
# Targets for executables used for setting up and validating.
#
convert:	convert.o	; $(CC) -o $@ $?
binary2ascii:	binary2ascii.o	; $(CC) -o $@ $?
ascii2binary:	ascii2binary.o	; $(CC) -o $@ $?
